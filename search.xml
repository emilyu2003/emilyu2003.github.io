<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java学习笔记1</title>
      <link href="/2022/02/15/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2022/02/15/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h4 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h4><p>使用scanner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> id = scanner.nextInt();</span><br><span class="line">String name = scanner.next();</span><br><span class="line"><span class="keyword">long</span> price = scanner.nextLong();</span><br><span class="line"><span class="keyword">double</span> capacity = scanner.nextDouble();</span><br></pre></td></tr></table></figure><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><h5 id="ArrayList-lt-gt"><a href="#ArrayList-lt-gt" class="headerlink" title="ArrayList&lt;&gt;"></a>ArrayList&lt;&gt;</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;类&gt; 名字 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">名字.add(元素);</span><br><span class="line">名字.set(idx, 元素);</span><br><span class="line">名字.remove(idx或元素);</span><br><span class="line"><span class="keyword">for</span> (类型 item : 名称) &#123;&#125;</span><br><span class="line">Collections.sort(名称); <span class="comment">//引入collections类</span></span><br><span class="line"><span class="keyword">if</span> (名称.contains(元素)) &#123;&#125;</span><br></pre></td></tr></table></figure><p>于是这里歪三产生了一个奇怪的问题，即如果列表里的元素和下标无法区分怎么办：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">tmp.add(<span class="number">5</span>);</span><br><span class="line">tmp.add(<span class="number">6</span>);</span><br><span class="line">tmp.add(<span class="number">3</span>);</span><br><span class="line">tmp.add(<span class="number">4</span>);</span><br><span class="line">System.out.println(tmp);</span><br><span class="line">tmp.remove(<span class="number">3</span>);</span><br><span class="line">System.out.println(tmp);</span><br></pre></td></tr></table></figure><p>采取以上实验之后，她发现了，程序移除了3号位置的元素，而非3这个元素，在idea里，括号中出现的提示字符串也是“index:”：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>故idx优先级比元素内容高，且如果两个类型相同，按idx来，所以如果真的要remove一个比较大的元素，直接输入值可能出现越界行为，如下（但满面红光！）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.lang.IndexOutOfBoundsException: Index <span class="number">5</span> out of bounds <span class="keyword">for</span> length <span class="number">4</span></span><br><span class="line">at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:<span class="number">64</span>)</span><br><span class="line">at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:<span class="number">70</span>)</span><br><span class="line">at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:<span class="number">266</span>)</span><br><span class="line">at java.base/java.util.Objects.checkIndex(Objects.java:<span class="number">359</span>)</span><br><span class="line">at java.base/java.util.ArrayList.remove(ArrayList.java:<span class="number">504</span>)</span><br><span class="line">at Main.main(Main.java:<span class="number">15</span>)</span><br></pre></td></tr></table></figure><h5 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h5><p>散列表，无序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;类<span class="number">1</span>, 类<span class="number">2</span>&gt; 名称 = <span class="keyword">new</span> HashMap&lt;类<span class="number">1</span>, 类<span class="number">2</span>&gt;();</span><br><span class="line">名称.put(key,value);</span><br><span class="line">名称.remove(key);</span><br><span class="line">名称.clear();</span><br><span class="line">名称.size();</span><br><span class="line"><span class="keyword">for</span> (Integer item : 名称.keySet()) &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (Integer item : 名称.values()) &#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h5><p>它存储类似于HashMap<br>只允许不同的key<br>log（n）的时间成本<br>有序<br>本质是红黑树    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TreeMap&lt;类<span class="number">1</span>, 类<span class="number">2</span>&gt; pairs = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">名称.put(key,value);</span><br><span class="line">value = 名称.get(key);</span><br><span class="line">名称.remove(key);</span><br><span class="line">名称.clear();</span><br><span class="line">名称.size();</span><br><span class="line">名称.firstKey();</span><br><span class="line">名称.lastKey();</span><br><span class="line">名称.ceillingKey(key);<span class="comment">//返回大于或等于给定键的最小键，如果没有这样的键则返回null，floor反之</span></span><br><span class="line">名称.higherKey(key);<span class="comment">//返回严格大于指定键的最小键，lower反之</span></span><br><span class="line"><span class="comment">//上面四个Key换成Entry就可对键值对进行操作</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h5><p>集合，无序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HashSet&lt;类&gt; 名称 = <span class="keyword">new</span> HashSet&lt;类&gt;();</span><br><span class="line">名称.add(元素);</span><br><span class="line">名称.remove(元素);</span><br><span class="line">名称.clear();</span><br><span class="line">名称.size();</span><br><span class="line"><span class="keyword">for</span> (Integer item : 名称) &#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h5><p>有序集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TreeSet&lt;类&gt; 名称 = <span class="keyword">new</span> TreeSet&lt;类&gt;();</span><br><span class="line">名称.add(元素);</span><br><span class="line">名称.remove(元素);</span><br><span class="line">名称.clear();</span><br><span class="line">名称.size();</span><br><span class="line"><span class="keyword">for</span> (Integer item : 名称) &#123;&#125;</span><br></pre></td></tr></table></figure><p>那怎样重载排序的运算符呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TreeSet&lt;Integer&gt; ts = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer a, Integer b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a &lt; b ? <span class="number">1</span> : -<span class="number">1</span>;<span class="comment">// 从大往小</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="BigInteger"><a href="#BigInteger" class="headerlink" title="BigInteger"></a>BigInteger</h5><p>好难用…c/c++选手留下痛苦的泪水<br>今天也是怀念unsigned long long的一天啊</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BigInteger sum = <span class="keyword">new</span> BigInteger(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">sum = sum.add(tmp);</span><br></pre></td></tr></table></figure><p>怎么进行数据转换呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BigInteger tmp = <span class="keyword">new</span> BigInteger(val.toString());<span class="comment">//但是对于非val类型的就得看下面的方法了</span></span><br><span class="line">BigInteger tmp = <span class="keyword">new</span> BigInteger(Long.toString(一个长整型数));<span class="comment">//int同理</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献阅读week_2</title>
      <link href="/2022/02/04/week-2/"/>
      <url>/2022/02/04/week-2/</url>
      
        <content type="html"><![CDATA[<h2 id="week-2"><a href="#week-2" class="headerlink" title="week 2"></a>week 2</h2><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><h3 id="题目：面向服务的制造系统中制造服务供需匹配研究综述与展望"><a href="#题目：面向服务的制造系统中制造服务供需匹配研究综述与展望" class="headerlink" title="题目：面向服务的制造系统中制造服务供需匹配研究综述与展望"></a>题目：面向服务的制造系统中制造服务供需匹配研究综述与展望</h3><h3 id="笔记："><a href="#笔记：" class="headerlink" title="笔记："></a>笔记：</h3><ul><li>制造服务供需匹配：<ul><li>供应：以服务形式存在的各类制造资源</li><li>资源：通过配置整合成为能力</li><li>服务：资源和能力通过一定的感知与接人、虚拟化、服务化等处理后以制造服务的形式存在从而可以通过网络被聚合、检索、调用等，并为社会化的用户提供面向产品全生命周期的各类应用</li><li>需求：全生命周期过程中涉及的所有与生产相关或与产品相关的任务以及其他服务需求的集合</li><li>资源+需求配置，结果得到制造服务和制造服务需求的映射关系</li><li>资源配置：需要哪些制造服务、怎么用，来解决某个服务需求</li><li>需求配置：是什么需求、任务按什么顺序被某个服务执行</li><li>包括静态预调度和动态再调度的双重决策</li><li>分类：<ul><li>从匹配的实质出发：包括供需对象匹配和供需数量匹配</li><li>从实现匹配的主体出发：包括企业供需匹配和系统供需匹配</li></ul></li><li>未来研究展望：<ul><li><strong>社会化</strong>制造服务供需的<strong>动态</strong>匹配</li><li>大数据的应用：演化、统计、挖掘与预测</li><li>供需匹配与企业协作及其价值创造的相互映射与影响</li><li>SOM系统／服务平台的完善及其与工业物联网的融合</li></ul></li></ul></li></ul><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>本文是一篇综述型文章。为推进制造业的信息化发展，本文发展面向服务的制造系统进行了现状讨论与趋势分析。其供需匹配在于资源配置和需求配置，目的是得到制造服务和制造服务需求的映射关系。其中供需匹配的研究模型分为供需静态、需求动态、供应动态、供需动态和过程动态。供需匹配问题的实现方法，从匹配依据的角度包括成本类、能耗类、时间类、质量类、风险类和其他评估指标；从技术手段分为点对点式、基于中介器和基于系统/服务平台的供需匹配；从求解方法分为基于模板／本体和关键字、基于流程驱动的方法、基于人工智能和规划的方法、基于图论的方法、基于中介器的方法、基于服务组合的方法、基于供应链的方法、基于智能体的方法、基于服务质量优化的方法等。其仍有不少展望值得继续探究。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="题目：面向服务的制造系统中制造服务供需匹配研究综述与展望-1"><a href="#题目：面向服务的制造系统中制造服务供需匹配研究综述与展望-1" class="headerlink" title="题目：面向服务的制造系统中制造服务供需匹配研究综述与展望"></a>题目：面向服务的制造系统中制造服务供需匹配研究综述与展望</h3><h3 id="笔记：云制造典型特征、关键技术与应用"><a href="#笔记：云制造典型特征、关键技术与应用" class="headerlink" title="笔记：云制造典型特征、关键技术与应用"></a>笔记：云制造典型特征、关键技术与应用</h3><ul><li>典型技术特征：制造资源和能力的物联化、虚拟化、服务化、协同化、智能化</li><li>关键技术：<ul><li>物联化技术<ul><li>自适应适配器技术，以及制定接口规范和标准传输协议</li></ul></li><li>虚拟化技术<ul><li>涉及各类“虚拟器件”模板或镜像的创建、发布、存储技术以及将物理环境迁移到虚拟环境的技术等</li><li>需要建立规范化的虚拟资源和能力描述模型，能够灵活管理“物理一虚拟器件”之间的映射关系</li></ul></li><li>智能化技术</li><li>云安全是一个共性的、十分重要的问题，限于篇幅，本文并未专门论述</li></ul></li><li>应用案例：<ul><li>面向航天复杂产品的集团企业云制造服务平台</li><li>面向轨道交通装备的集团企业云制造服务平台</li><li>支持企业业务紧密合作的中小企业云制造服务平台</li><li>支持产业集群协作的中小企业云制造服务平台</li><li>（以上均从五个技术特征分析）</li></ul></li><li>总结展望：<ul><li>在落实阶段</li><li>系统建设和技术/产品发展相互促进</li><li>建造云制造技术研究队伍</li><li>重视自主云制造产业</li></ul></li></ul><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>本文总结了云制造的典型技术特征，即制造资源和能力的物联化、虚拟化、服务化、协同化、智能化；以及实现云制造的关键技术，即物联化技术、虚拟化技术、智能化技术、以及本文并未展开的安全技术。同时，本文展示了当前云制造的一些应用案例。而对于未来云制造的发展，本文提出应该在云制造系统建设和技术/产品发展相互促进的良性循环中，通过建造云制造技术研究队伍，并重视自主云制造产业的方式进行进一步工作。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><h3 id="题目：云制造及相关先进制造模式分析"><a href="#题目：云制造及相关先进制造模式分析" class="headerlink" title="题目：云制造及相关先进制造模式分析"></a>题目：云制造及相关先进制造模式分析</h3><h3 id="笔记：-1"><a href="#笔记：-1" class="headerlink" title="笔记："></a>笔记：</h3><ul><li>制造的服务化、基于知识的创新能力，以及对各类制造资源的聚合与协同能力、对环境的友好性，已成为构成企业竞争力的关键要素和制造业信息化发展的趋势</li><li>与云制造相关的先进制造模式<ul><li>敏捷制造<ul><li>有点推式制造的感觉？需要快速反应。纹理给出了三种别人的解释，想必他们自己也没有很好的辨析清楚（笑）。</li><li>这种模式下诞生了虚拟企业（只关注其具有核心竞争能力的功能业务，将非核心业务进行虚拟化/当市场出现新机遇时，不同公司为了共同的竞争目标，以网络为基础所组成的临时性动态联盟）</li><li>这个虚拟企业有趣！</li></ul></li><li>网络化制造<ul><li>是敏捷制造等模式的延续和发展</li><li>通过网络实现分散计算资源的共享与优化配置</li></ul></li><li>面向服务的制造</li></ul></li><li>云制造<ul><li>对比敏捷制造<ul><li>平台更开放</li><li>协作联盟范围更广</li><li>资源种类数量更丰富</li><li>企业间有更持久的业务过程经验和知识积累</li><li>涉及业务范围更广</li></ul></li><li>对比网络化制造</li><li>对比面向服务的制造<ul><li>云制造是面向服务制造理念的一种体现，通过产品与服务、制造与服务的融合，实现以向用户提供专业化及社会化的服务为目的。</li><li>云制造理念丰富了面向服务制造的内涵，如强调了制造能力的服务化、资源的按需使用及动态协同等。</li></ul></li></ul></li><li>总结：<ul><li>云制造借鉴了已有先进制造模式的成果，并在理念、模式、组织实施、技术架构等多方面进行了拓展。</li><li>模式、技术及应用仍有展望</li></ul></li></ul><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>为了更好的理解云制造的特点和内涵，本文列举了现有的先进制造模式：敏捷制造、网络化制造与面向服务的制造，并一一与云制造的理念嗯应用模式对比，找出区别与联系。从中可见云制造拥有更加广阔的平台和丰富的资源，同时更加体现了制造的服务化、对各类制造资源的聚合与协同能力，实现以向用户提供专业化及社会化的服务。</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><h3 id="题目：云制造模式下制造能力建模关键技术"><a href="#题目：云制造模式下制造能力建模关键技术" class="headerlink" title="题目：云制造模式下制造能力建模关键技术"></a>题目：云制造模式下制造能力建模关键技术</h3><h3 id="笔记：-2"><a href="#笔记：-2" class="headerlink" title="笔记："></a>笔记：</h3><ul><li><p>制造能力是云制造服务平台中最重要和核心的服务内容之一，通过智力资源的引入，能够将上述资源进行有效集成并以能力的形式对外提供</p></li><li><p>云制造模式下制造能力概念模型与分类</p><ul><li>制造能力概念模型<ul><li>制造能力：在某一具体活动过中产生，体现了一种对制造资源配置和整合的能力</li><li>包括四个部分：资源(Resource，R)、过程(Process，P)、任务(Task，T)和知识(Knowledge，K)，即制造能力的RPT-K模型</li></ul></li><li>分类<ul><li>制造能力层次结构：为资源级(单元级)、业务级(流水线级)、企业级和产业级</li><li>制造能力需求：制造资源租用/产品业务购买方式</li><li>制造能力组成：基本能力和增值能力</li></ul></li></ul></li><li><p>制造能力多维信息描述模型：包括要素描述、关系描述、和评估指标</p><ul><li>（这里也有离散的感觉！） </li><li>主体资源</li><li>产品／业务信息描述</li><li>人力资源</li><li>过程知识</li></ul></li><li><p>制造能力描述框架（上面是 是什么，这里是 怎么描述，也就是语言）</p><ul><li>离散！！！！离散啊啊啊啊！</li></ul></li><li><p>制造能力管理及应用技术</p><ul><li>制造能力封装发布、智能匹配、动态组合、制造能力协同、制造能力综合评估及演化等</li><li>采用“一次搜索、二次推荐”的方法来实现</li></ul></li><li><p>本文通过前面给出的制造能力的相关理论分析，设计开发了一款制造能力服务化原型系统。该系统主要针对三种资源(硬件加工设备、软件、智力资源)及能力进行服务化封装发布。</p></li></ul><h3 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h3><p>本文对云制造模式下制造能力概念模型进行了描述（RPT-K模型），并提出了针对制造能力层次结构、制造能力需求和制造能力组成的分类。根据要素描述、关系描述、和评估指标建立制造能力多维信息描述模型和描述框架。制造能力管理及应用技术在于制造能力封装发布、智能匹配、动态组合、制造能力协同、制造能力综合评估及演化等。同时，本文通过制造能力的相关理论分析，设计开发了一款制造能力服务化原型系统。该系统主要针对三种资源（硬件加工设备、软件、智力资源）及能力进行服务化封装发布。    </p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><h3 id="题目：云制造特征及云服务组合关键问题研究"><a href="#题目：云制造特征及云服务组合关键问题研究" class="headerlink" title="题目：云制造特征及云服务组合关键问题研究"></a>题目：云制造特征及云服务组合关键问题研究</h3><h3 id="笔记：-3"><a href="#笔记：-3" class="headerlink" title="笔记："></a>笔记：</h3><ul><li><p>制造云服务组合是提高云制造资源利用率、实现制造资源增值的关键途径之一</p></li><li><p>而云制造系统中云服务的多样性、复杂性、规模性等特点，使得以上方法不能直接用于云服务组合的实现。</p></li><li><p>云制造的典型特征：</p><ul><li>面向服务和需求</li><li>不确定性</li><li>用户参与</li><li>透明和集成（计算机意义下的透明）</li><li>主动（订单主动寻找制造方/云服务主动寻找租户）</li><li><strong>按需使用和付费</strong></li><li>低门槛、外包式制造</li><li>敏捷化</li><li>专业化</li><li>基于能力共享与交易</li><li>基于知识</li><li>基于群体创新（维基百科式）</li><li>绿色低碳（是云制造目标之一）</li></ul></li><li><p>概念辨析</p><ul><li><p>制造资源</p><ul><li>一切能在制造全生命周期中发挥作用的所有软硬件资源、人、知识等的总称</li><li>可描述出相应的制造能力</li><li>经虚拟化封装成制造云服务</li></ul></li><li><p>制造云服务</p><ul><li>建成云服务</li><li>与云计算服务相对应</li><li>把云制造资源和云制造能力基于知识进行虚拟封装，接入智能平台，通过网络想用户提供高度虚拟化的云端资源/服务的过程</li></ul></li><li><p>制造云</p><ul><li>云服务按照一定规则聚合形成</li><li>云服务资源池</li></ul></li><li><p>针对按需分配和使用资源的特点，需要云服务组合</p></li></ul></li><li><p>云服务组合</p><ul><li>主要模型（图4）</li><li>关键问题<ul><li>云服务组合建模、描述、一致性检查、可执行模型转换</li><li>云服务组合关联关系</li><li>云服务组合柔性管理</li><li>云服务组合网络及动力学特性</li><li>云服务组合综合评估及优选</li></ul></li></ul></li></ul><img src="/2022/02/04/week-2/image-20220204085628392.png" class="" title="image-20220204085628392"><ul><li>下一步：将对本文提到的云服务组合关键问题进行深入研究，提出相应的解决方法，并对云制造模式进行全方位研究。</li></ul><h3 id="总结：-4"><a href="#总结：-4" class="headerlink" title="总结："></a>总结：</h3><p>云制造系统中云服务的多样性、复杂性、规模性等特点，使得一般制造方法不能直接用于云服务组合这一提高云制造资源利用率、实现制造资源增值的关键途径的实现。本文有限分析了云制造特点，辨析了制造资源、制造云服务、制造云三者的概念，提出云服务组合的重要性，并在此基础上对云服务组合全生命周期需求进行分析，阐述了云组合服务的关键问题：云服务组合建模／描述和一致性检查、云服务关联关系、云服务组合柔性、组合网络及其动力学特性、云服务组合建模与评估、组合优选等，为未来实现高效智能化的云制造服务管理提供理论支持。</p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><h3 id="题目：制造云构建关键技术研究"><a href="#题目：制造云构建关键技术研究" class="headerlink" title="题目：制造云构建关键技术研究"></a>题目：制造云构建关键技术研究</h3><h3 id="笔记：-4"><a href="#笔记：-4" class="headerlink" title="笔记："></a>笔记：</h3><ul><li><p>概念介绍</p><ul><li>制造云服务</li><li>制造云<ul><li>制造公云</li><li>制造私云</li></ul></li></ul></li><li><p>制造云构建层次示意图</p></li><li><p>制造云构建的关键技术</p><ul><li>资源分类（同样的，还是资源形成能力）<img src="/2022/02/04/week-2/image-20220204094403945.png" class="" title="image-20220204094403945"><ul><li>定义属性：静态/动态</li></ul></li><li>资源虚拟化<ul><li>主要指云制造能力和资源的虚拟化</li><li>弱化物理依赖</li><li>包括资源感知和资源的虚拟接入</li><li>资源感知<ul><li>硬资源感知：物联网</li><li>软资源感知：对静态属性</li></ul></li><li>虚拟接入</li></ul></li><li>虚拟资源服务化<ul><li>把资源描述规范，以服务的形式发布到云平台</li><li>DMM[c=(Task，Resource，Participator，Knowledge)。</li></ul></li><li>云服务部署<ul><li>对制造云中的云服务进行集中、高效的管理</li><li>面向完全托管的部署</li><li>面向部分托管的部署</li></ul></li></ul></li><li><p>面向设计仿翼的云服务平台</p><ul><li>虚拟化支撑子系统 </li><li>云服务管理子系统</li><li>知识库管理子系统</li><li>面向云服务的复杂产品设计子系统</li></ul></li></ul><h3 id="总结：-5"><a href="#总结：-5" class="headerlink" title="总结："></a>总结：</h3><p>本文围绕制造云的构建，研究了其过程与其中的关键技术。本文首先结合云制造模式的特点，对制造云及制造云服务进行了相关说明和层次展示，并对制造云构建过程中的关键技术依次做了详细阐述：资源分类、资源虚拟化、虚拟资源服务化与云服务部署。最后，结合已有成果，课题组初步开发了面向设计仿真的云服务平台原型，该平台主要针对产品全生命周期应用过程中设计、仿真阶段的各类资源，包括虚拟化支撑、云服务管理、知识库管理和面向云服务的复杂产品设计四个子系统。同时，本文也展望未来，如云制造运行模式、平台标准规范等依旧是云制造研究中面临的问题，下一步将结合制造业实际需求对相关的问题做更深入的研究与探索，推进云制造落地。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务 云制造 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献阅读week_1</title>
      <link href="/2022/01/25/week-1/"/>
      <url>/2022/01/25/week-1/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><h3 id="题目：基于BOM的节能减排评估系统研究水"><a href="#题目：基于BOM的节能减排评估系统研究水" class="headerlink" title="题目：基于BOM的节能减排评估系统研究水"></a>题目：基于BOM的节能减排评估系统研究水</h3><h3 id="笔记："><a href="#笔记：" class="headerlink" title="笔记："></a>笔记：</h3><p>这个BOM物料清单！这不是经管考点嘛。<br>目标：节能减排，到转变经济增长方式，合理利用资源，优化企业生产结构的目的，从而建设一个资源节约型、环境友好型社会。<br>以使节能减排评估与企业现有信息化有机结合和无缝集成，从而在实现了企业节能减排评估设计的基础上，盘活了企业现有信息化系统，实现了企业的信息化增效。<br>目前，温室气体减排对于全面实施节能减排有重要意义，而有了产品生命周期温室气体排放评估，便可以计算产品碳足迹，在商品上添加碳标签，引导消费者购买更低碳的商品，实现减排。同时</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>本文提出一种基于BOM的节能减排评估方法，实现企业节能减排评估设计与信息化的有机结合。节能减排的两种方法——计算碳足迹，添加碳标签以引导消费者购买更低碳的商品、把二氧化碳排放权作为一种商品，形成的二氧化碳排放权交易，都依赖于对产品生命周期温室气体排放的评估。于是本文提出基于物料清单的节能减排评估，其结构包括应用层、核心功能层和数据支撑层，其中应用层包括用户管理、节能减排数据采集与统计、节能减排指标评价与分析、节能减排设计和结果可视化；核心功能层负责链接应用层和数据支撑层；数据支撑层负责存放用户和企业数据以及减排的指标。其运作流程如下：完善企业减排基础数据库；对产品生命周期建模；基于BOM对产品生命周期模型中各个环节进行属性添加；计算各个环节的能耗和排放数据，进行节能减排评估；对照标准判定模型可用性，迭代得到最优方案。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="题目：基于OWL—P的产品开发过程共享信息语义描述"><a href="#题目：基于OWL—P的产品开发过程共享信息语义描述" class="headerlink" title="题目：基于OWL—P的产品开发过程共享信息语义描述"></a>题目：基于OWL—P的产品开发过程共享信息语义描述</h3><h3 id="笔记：-1"><a href="#笔记：-1" class="headerlink" title="笔记："></a>笔记：</h3><p>为缩短开发时间，提高企业的竞争力，复杂产品开发的许多阶段都由分布在不同地点、实现不同功能的学科团队合作完成，这就需要产品开发过程中的各种信息能够被顺畅地交换和共享。<br>本体作为“共享概念模型的明确的形式化规范说明”，提供了形式化描述知识的基础，使系统之间的知识级共享和集成成为可能。<br>太硬了太硬了啊啊啊…我看不懂了……这充满了离散数学的逻辑……</p><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>为缩短复杂产品的开发时间，提高企业的竞争力，企业需要对交换的静态结构信息（各个原件的概念、属性等）和动态特征信息（不同组件的连接顺序、内部数据流关系、对外接口、装配顺序等）进行语义化描述。故本文提出利用面向过程的Web本体描述语言，构造产品共享信息模型。在OWL语法基础上定义语义、关系以及运算规则，建立了一个逻辑运算系统，提出了可以同时描述静态结构和动态特性的OWL—P语言，满足复杂产品的抽象、产品的知识共享、以及产品的知识推理。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><h3 id="题目：基于云制造平台企业合作演化仿真系统的设计与实现"><a href="#题目：基于云制造平台企业合作演化仿真系统的设计与实现" class="headerlink" title="题目：基于云制造平台企业合作演化仿真系统的设计与实现"></a>题目：基于云制造平台企业合作演化仿真系统的设计与实现</h3><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p>云制造：云制造是为降低制造资源的浪费，借用云计算的思想，利用信息技术实现制造资源的高度共享。建立共享制造资源的公共服务平台，将巨大的社会制造资源池连接在一起，提供各种制造服务，实现制造资源与服务的开放协作、社会资源高度共享。企业用户无需再投入高昂的成本购买加工设备等资源，咨询通过公共平台来购买租赁制造能力。<br>在理想情况下，云制造将实现对产品开发、生产、销售、使用等全生命周期的相关资源的整合，提供标准、规范、可共享的制造服务模式。这种制造模式可以使制造业用户像用水、电、煤气一样便捷地使用各种制造服务。</p><p>但由于市场的开放性，会有很多因素影响交易的进行。<br>为应对云制造服务平台的不稳定性，进行仿真系统的设计。<br>其结构如下：</p><ul><li>记录每个企业的基本信息+交易信息，其中包括可调节的服务质量和服务时间</li><li>管理线程：交易频率+交易对象+交易状态<br>结果：</li><li>产生可视化交易网格</li><li>将不同规则约束下的仿真中交易发生的频率对比实际，得到演化后企业利润</li><li>同时可以通过此仿真模型来调整平台的规则，避免个体、团体垄断出现，平衡平台中企业利润的分配</li></ul><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>此文以利用云计算的思想，使制造资源的高度共享，以降低制造资源浪费的云制造平台为背景，介绍了一个企业合作演化仿真系统。该系统结构包括两个部分，资源池和其上的仿真管理平台，其中资源池中记录每个企业的可调的基本信息与变动的交易信息，而仿真管理平台又分为线程管理（即交易频率、交易对象、交易状态）、交易过程管理（此次交易的现金流、对质量的评价等）及规则接口管理（以一定规则对交易对象进行排序，如企业位置、服务价格、服务时间、服务质量等）三个主要模块。（注：这里原文的实际写作顺序和概括性话语的顺序不一样。）该仿真平台可调整的参数包括：线程数量的随机程度，企业的位置、服务质量、服务时间，交易的服务时间误差，交易排序规则。其用途体现在，其一，仿真结果可以将不同规则约束下的仿真中交易发生的频率对比实际，得到演化后企业利润；其二，可以通过此仿真模型来调整平台的交易规则，避免个体、团体垄断出现，同时平衡平台中企业利润的分配。</p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>大概是我境界不够或者文章有些年头了？<br>感觉这篇文章起在了一个我并不了解的地方，确实有其用处，但这个模型过于粗糙了。<br>首先，一上来我就没有看懂文章里写的云计算是什么意思。因为他真的没有突出云制造和现在的交易市场的区别在哪里——交易对象是放眼到整个世界中算出来的。或者说，他这个论文太短了，什么都没说清就过去了。<br>其次，这个变量也太多了，如何贴合实际的进行调整，本人认为这不应该是交由人类来做的事情，文章也没有说，只是提出了这么一个平台的概念。这个规则到底由不由平台制定，由谁制定，这都很难说。特别是这样的云制造，它会涉及国家之间的贸易往来，那请问这个模型是否还有其他意义？或者，这个规则还能怎么制定？所以本人认为，这个模型建立的非常粗糙，看似用了很多随机数模拟真实情况（但有没有考虑中心极限定理哇！），但有些脱离实际。而且，这个交易本身也是被抽象出来的，实际上的交易可能涉及链状等复杂情况，也可能涉及诸多感性联系的影响，很难模拟。<br>并且，至于他到底多有用，也没有一个用于评估价值的系统与之呼应（满脑子loss函数了属于是），最后只给了我三张只写了一个图注的图，让我来猜他们是什么意思。所以它的用途也仍有待考究。<br>总结一下，就是面向的问题太大太广，提出的方法太模糊，成品太粗糙。</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><h3 id="题目：面向产品全生命周期的制造资源优选及组合方法研究"><a href="#题目：面向产品全生命周期的制造资源优选及组合方法研究" class="headerlink" title="题目：面向产品全生命周期的制造资源优选及组合方法研究"></a>题目：面向产品全生命周期的制造资源优选及组合方法研究</h3><p>将服务分为两类：单一资源服务需求任务和多资源服务需求任务<br>目标问题：服务的优选<br>服务属性：前端属性是指该类服务处在制造全生命周期的后一个制造环节，被其他制造资源调用时所用到的匹配属性；后端属性是指该类资源处在制造全生命周期的前一个环节时，调用其他服务所用到的匹配属性。连续型；离散型。正向属性是指当某类属性的取值变大时，制造代价也变大；负向属性反之。</p><ul><li><p>解决方法：</p><ul><li><p>单服务：</p></li><li><p>使用权值计算法，对服务属性进行加权，用公式 $ Price(s) = \frac{1}{\sum_{n}^{i=1} {w(a_i)}}\sum_{n}^{i=1} {w(a_i)a_i} $ ，但若此时约束条件不为0，则$ Price = +\infty$</p></li><li><p>约束条件包括：</p><p>$<br>status =<br>\begin{cases}<br>0,  &amp; \text{资源可用} \<br>1, &amp; \text{资源不可用}<br>\end{cases}<br>$</p><p>$<br>加工精度 =<br>\begin{cases}<br>0,  &amp; \text{实际加工精度 &gt;= 用户期望} \<br>1, &amp; \text{资源不可用 &lt; 用户期望}<br>\end{cases}<br>$</p><p>$<br>服务类型系数 =<br>\begin{cases}<br>0,  &amp; \text{服务类型匹配} \<br>1, &amp; \text{服务类型不匹配}<br>\end{cases}<br>$</p><p>三者相加得到最终约束条件。</p></li><li><p>此时得到了所有服务的price，由低到高排序得到最佳匹配服务。</p></li></ul></li><li><p>多服务组合优选</p><ul><li>$ Price(service_i) = \sum_{正向因素} {r_ja_{ij}}  - \sum_{负向因素} {r_ja_{ij}}$ ，其中 $r_j$ 表示j个属性的权值，$ a_{ij}$ 表示第i个服务的j个属性大小</li><li>最优服务组合即最优个体相加得到</li></ul></li></ul><h3 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h3><p>此文运用云制造系统服务云池的理论，结合制造业产业链中产品全生命周期理论，对单一资源服务需求任务和多资源服务需求任务分别建立模型进行仿真。文章将服务的属性分为前端属性、后端属性；连续型、离散型；正向属性、负向属性。</p><p>对于单一资源服务，文章采用使用权值计算法，对服务属性进行加权，得到如下制造代价的公式：<br>$ Price(s) = \frac{1}{\sum_{n}^{i=1} {w(a_i)}}\sum_{n}^{i=1} {w(a_i)a_i} $ ，受到以下三个条件的约束：</p><p>$<br>status =<br>\begin{cases}<br>0,  &amp; \text{资源可用} \<br>1, &amp; \text{资源不可用}<br>\end{cases}<br>$</p><p>$<br>加工精度 =<br>\begin{cases}<br>0,  &amp; \text{实际加工精度 &gt;= 用户期望} \<br>1, &amp; \text{资源不可用 &lt; 用户期望}<br>\end{cases}<br>$</p><p>$<br>服务类型系数 =<br>\begin{cases}<br>0,  &amp; \text{服务类型匹配} \<br>1, &amp; \text{服务类型不匹配}<br>\end{cases}<br>$</p><p>三者相加得到最终约束条件。但若约束条件不为0，则$ Price = +\infty$。<br>由此此时得到所有服务的制造代价，由低到高排序得到最佳匹配服务。</p><p>而对于多服务组合优选的模型建立，本文采取个体相加得到组合最优的策略，运用加权公式$ Price(service_i) = \sum_{正向因素} {r_ja_{ij}}  - \sum_{负向因素} {r_ja_{ij}}$ 计算每个服务的代价 ，其中 $r_j$ 表示j个属性的权值，$ a_{ij}$ 表示第i个服务的j个属性大小。在多资源的任务中，每一个进程选择下一项服务时都通过对这种服务的制造代价由低到高排序得到下一步的最佳匹配服务，即转化为多个单环节服务优选模型组合构成。</p><p>此模型可以用于解决云制造系统基于产品全生命周期的制造资源和服务的选优和组合优化的问题，但未考虑时间对属性等因素的影响。</p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><h3 id="题目：云制造资源服务能耗评估及应用"><a href="#题目：云制造资源服务能耗评估及应用" class="headerlink" title="题目：云制造资源服务能耗评估及应用"></a>题目：云制造资源服务能耗评估及应用</h3><h3 id="笔记：-2"><a href="#笔记：-2" class="headerlink" title="笔记："></a>笔记：</h3><p>本文利用物联网技术对制造硬资源(设备资源、物料资源、基础设施资源等)的能耗信息进行感知和采集，针对不同类型的硬资源，采取不同的物联网感知技术与适配技术，对已感知的能耗信息进行描述，满足云制造平台对资源粗耦合接入的需求，将异构的资源整合到统一的云基础架构中并实现标准化、服务化提供支持。</p><p>（这个文档有两页有问题，是白页）</p><h3 id="总结：-4"><a href="#总结：-4" class="headerlink" title="总结："></a>总结：</h3><p>本文从考虑降低能耗的角度提出了一种基于物联网的云制造资源服务能耗综合评估框架和云制造服务能耗计算模型。其中，云制造资源服务能耗综合评估框架主要由物联网技术进行的数据采集、评估、以及用户接口来提供评估应用三个部分组成。而能耗计算模型面向服务的云制造模式，更注重过程，能耗问题研究主要在服务准备能耗、服务优化组合能耗、服务配置能耗、服务使用能耗、服务处置能耗和回收能耗等阶段。云制造服务能耗计算矩阵用于计算若干任务单位在正常载荷、空载、附加载荷 (或者是损失能耗) 状态下所消耗的某种一次能源、 二次能源及能耗工质；任务的综合耗能公式为能耗折煤量之和；服务的综合能耗为可定量的某类基本单位服务所需要的能耗。再由约束条件，可得出资源服务能耗的评估系统。由此模型可初步探索出如何加强制造资源的节能调度、进行全过程管理， 进一步推动云制造的研究。</p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><h3 id="题目：云制造资源虚拟化研究"><a href="#题目：云制造资源虚拟化研究" class="headerlink" title="题目：云制造资源虚拟化研究"></a>题目：云制造资源虚拟化研究</h3><h3 id="笔记：-3"><a href="#笔记：-3" class="headerlink" title="笔记："></a>笔记：</h3><p>CPS是一个综合计算、网络和物理环境的复杂系统，通过3C技术(计算(Computation)、通信(Communication)和控制(Control))的融合，实现物理世界与虚拟世界的相互作用，提供实时感知、动态控制和信息反馈等服务.<br>物联网侧重于物与物之间的互联以达到世界万物的联通与感知，例如对于物流物品的跟踪监控；而CPS在物与物互联与感知的基础上，则更侧重于对物的反馈控制，实现人、机、物的融合与协作。</p><h3 id="总结：-5"><a href="#总结：-5" class="headerlink" title="总结："></a>总结：</h3><p>本文在云制造基础上提出了云制造资源虚拟化的框架，主要分为制造资源、物联网／CPS基础设施、物理资源历、虚拟资源云池以及虚拟资源管理这五个层次。其中制造资源又分为硬制造资源和软制造资源，硬制造资源可在云计算概念下被虚拟化；虚拟资源云池建立物理（物理资源历）与虚拟制造资源之间的映射关系。在虚拟化支持下的云制造关键技术包括资源的智能感知与控制、服务环境的按需动态构建、动态调度、环境的高可靠协同运行与容错迁移、人机交互、及多级安全隔离和访问控制。云制造资源虚拟化可以使软硬资源共享更加全面深入，提高效率和安全性，实现节能降耗。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>helloworld</title>
      <link href="/2022/01/24/helloworld/"/>
      <url>/2022/01/24/helloworld/</url>
      
        <content type="html"><![CDATA[<h1 id="Yblog-的诞生"><a href="#Yblog-的诞生" class="headerlink" title="Yblog 的诞生"></a>Yblog 的诞生</h1><h3 id="一-拥有自己的github-page"><a href="#一-拥有自己的github-page" class="headerlink" title="一   拥有自己的github page"></a>一   拥有自己的github page</h3><ol><li>拥有一个github账号（并牢牢记住用户名和密码！！！）。</li><li>点击右上角加号，再点击new repository。<img src="/2022/01/24/helloworld/image-20220124203950430.png" class="" title="image-20220124203950430"></li><li>Repository name设为用户名.github.io，勾选Add a README file，点击创建。<img src="/2022/01/24/helloworld/image-20220124204325686.png" class="" title="image-20220124204325686"></li></ol><h3 id="二-安装Node-js"><a href="#二-安装Node-js" class="headerlink" title="二   安装Node.js"></a>二   安装Node.js</h3><p>安装选项全部默认。<br>测试：cmd中输入node -v和npm -v，出现版本号。</p><h3 id="三-安装Git"><a href="#三-安装Git" class="headerlink" title="三   安装Git"></a>三   安装Git</h3><p>安装选项全部默认。<br>测试：cmd中输入git –version，出现版本号。</p><h3 id="四-安装hexo"><a href="#四-安装hexo" class="headerlink" title="四   安装hexo"></a>四   安装hexo</h3><ol><li>在合适的地方新建一个文件夹，用来存放自己的博客文件。</li><li>在新建的文件夹中右键，选择Git Bash Here，打开git的控制台窗口</li><li>输入npm i hexo-cli -g，安装hexo<img src="/2022/01/24/helloworld/image-20220124204809173.png" class="" title="image-20220124204809173">测试：输入hexo -v，出现版本号。</li><li>初始化：输入hexo init初始化文件夹，接着输入npm install安装必备的组件。</li></ol><h3 id="五-关联github和本地"><a href="#五-关联github和本地" class="headerlink" title="五   关联github和本地"></a>五   关联github和本地</h3><ol><li>在git bash中输入git config –global user.name “用户名”</li><li>输入git config –global user.email “邮箱”</li><li>生成密钥SSH key：ssh-keygen -t rsa -C “邮箱<br>&lt; 一张不能对外显示的图片 &gt;<br>此时我们获得了一个很可爱的小方盒子。</li></ol><p>&lt; 一段不能对外显示的字符串 &gt;</p><ol start="4"><li>输入cat ~/.ssh/id_rsa.pub，将输出复制出来：</li></ol><p>&lt; 一段不能对外显示的字符串 &gt;</p><ol start="5"><li><p>打开github网页，点击自己的头像找到settings，然后找到SSH and GPG keys一栏，新建一个ssh key。把第4步复制出来的key粘贴到下面的key文本框中，title随便起一个就行。</p><img src="/2022/01/24/helloworld/image-20220124205724033.png" class="" title="image-20220124205724033"></li><li><p>测试：输入ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;</a>。</p><img src="/2022/01/24/helloworld/image-20220124205918174.png" class="" title="image-20220124205918174"></li><li><p>打开博客根目录下的_config.yml<br>修改并扩充最后一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/用户名/用户名.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>修改/scaffolds/post.md中内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">top: false</span><br><span class="line">cover: false</span><br><span class="line">password:</span><br><span class="line">toc: true</span><br><span class="line">mathjax: true</span><br><span class="line">summary:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br></pre></td></tr></table></figure></li><li><p>由于这个博客用的是master这个branch，于是在项目页面下找到settings</p><img src="/2022/01/24/helloworld/image-20220124210633409.png" class="" title="image-20220124210633409"><p>然后就在options中使劲往下划，直到看到github pages的条目：</p><img src="/2022/01/24/helloworld/image-20220124210744886.png" class="" title="image-20220124210744886"><p>点击check it out here，修改sourse，并点击save。<img src="/2022/01/24/helloworld/image-20220124210907304.png" class="" title="image-20220124210907304"></p></li></ol><h3 id="六-发布文章！"><a href="#六-发布文章！" class="headerlink" title="六   发布文章！"></a>六   发布文章！</h3><p>终于到这里了！</p><ol><li>在根目录下打开git bash，输入npm i hexo-deployer-git。</li><li>新建文章：hexo new post “helloword”</li><li>在/source/_post/ 目录下可以找到helloword.md</li><li>这种时候用什么编辑都行了。</li><li>生成静态网页：hexo g</li><li>本地预览：hexo s</li><li>上传github：hexo d</li></ol><h3 id="七-美化"><a href="#七-美化" class="headerlink" title="七   美化"></a>七   美化</h3><p>建议直接搜索hexo theme，任君挑选。<br>我使用了 <a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a> 这个主题，<del>（butterfly就是辉人啊！）</del>，通过阅读他给出的readme.md即完成了配置。</p><ol><li><p>在博客根目录打开git base，输入npm i hexo-theme-butterfly</p></li><li><p>打开博客根目录下的_config.yml，找到里面的theme这一句，没记错的话在很靠下的地方，改成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></li><li><p>其实不需要这一步，但万一第二步失败了可以尝试。（这只蒟蒻是因为太心急了，还没刷新出来就以为失败了所以多做了一步）输入npm install hexo-renderer-pug hexo-renderer-stylus即可。</p></li></ol><p><strong>完美！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/24/hello-world/"/>
      <url>/2022/01/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
